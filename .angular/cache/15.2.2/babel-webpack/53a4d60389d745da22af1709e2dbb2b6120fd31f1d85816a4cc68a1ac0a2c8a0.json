{"ast":null,"code":"export class TimeConverter {\n  convertTimeSteampToBrazilianDateTime(start) {\n    const date = new Date(start);\n    // Obter os valores de data e hora em UTC\n    const utcYear = date.getUTCFullYear();\n    const utcMonth = date.getUTCMonth();\n    const utcDay = date.getUTCDate();\n    const utcHours = date.getUTCHours();\n    const utcMinutes = date.getUTCMinutes();\n    const utcSeconds = date.getUTCSeconds();\n    // Ajustar para o fuso horário de Brasília (UTC-03:00)\n    date.setUTCHours(utcHours - 3);\n    // Obter os valores de data e hora em horário de Brasília\n    const brYear = date.getFullYear();\n    const brMonth = date.getMonth();\n    const brDay = date.getDate();\n    const brHours = date.getHours();\n    const brMinutes = date.getMinutes();\n    const brSeconds = date.getSeconds();\n    console.log(`Data e hora em UTC-02:00: ${utcDay}/${utcMonth + 1}/${utcYear} ${utcHours}:${utcMinutes}:${utcSeconds}`);\n    console.log(`Data e hora em Brasília: ${brDay}/${brMonth + 1}/${brYear} ${brHours}:${brMinutes}:${brSeconds}`);\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,aAAa;EACjBC,oCAAoCA,CAACC,KAAa;IACvD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC;IAE5B;IACA,MAAMG,OAAO,GAAGF,IAAI,CAACG,cAAc,EAAE;IACrC,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,WAAW,EAAE;IACnC,MAAMC,MAAM,GAAGN,IAAI,CAACO,UAAU,EAAE;IAChC,MAAMC,QAAQ,GAAGR,IAAI,CAACS,WAAW,EAAE;IACnC,MAAMC,UAAU,GAAGV,IAAI,CAACW,aAAa,EAAE;IACvC,MAAMC,UAAU,GAAGZ,IAAI,CAACa,aAAa,EAAE;IAEvC;IACAb,IAAI,CAACc,WAAW,CAACN,QAAQ,GAAG,CAAC,CAAC;IAE9B;IACA,MAAMO,MAAM,GAAGf,IAAI,CAACgB,WAAW,EAAE;IACjC,MAAMC,OAAO,GAAGjB,IAAI,CAACkB,QAAQ,EAAE;IAC/B,MAAMC,KAAK,GAAGnB,IAAI,CAACoB,OAAO,EAAE;IAC5B,MAAMC,OAAO,GAAGrB,IAAI,CAACsB,QAAQ,EAAE;IAC/B,MAAMC,SAAS,GAAGvB,IAAI,CAACwB,UAAU,EAAE;IACnC,MAAMC,SAAS,GAAGzB,IAAI,CAAC0B,UAAU,EAAE;IAEnCC,OAAO,CAACC,GAAG,CACT,6BAA6BtB,MAAM,IACjCF,QAAQ,GAAG,CACb,IAAIF,OAAO,IAAIM,QAAQ,IAAIE,UAAU,IAAIE,UAAU,EAAE,CACtD;IACDe,OAAO,CAACC,GAAG,CACT,4BAA4BT,KAAK,IAC/BF,OAAO,GAAG,CACZ,IAAIF,MAAM,IAAIM,OAAO,IAAIE,SAAS,IAAIE,SAAS,EAAE,CAClD;EACH","names":["TimeConverter","convertTimeSteampToBrazilianDateTime","start","date","Date","utcYear","getUTCFullYear","utcMonth","getUTCMonth","utcDay","getUTCDate","utcHours","getUTCHours","utcMinutes","getUTCMinutes","utcSeconds","getUTCSeconds","setUTCHours","brYear","getFullYear","brMonth","getMonth","brDay","getDate","brHours","getHours","brMinutes","getMinutes","brSeconds","getSeconds","console","log"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/utils/timeConverter.ts"],"sourcesContent":["export class TimeConverter {\n  public convertTimeSteampToBrazilianDateTime(start: number) {\n    const date = new Date(start);\n\n    // Obter os valores de data e hora em UTC\n    const utcYear = date.getUTCFullYear();\n    const utcMonth = date.getUTCMonth();\n    const utcDay = date.getUTCDate();\n    const utcHours = date.getUTCHours();\n    const utcMinutes = date.getUTCMinutes();\n    const utcSeconds = date.getUTCSeconds();\n\n    // Ajustar para o fuso horário de Brasília (UTC-03:00)\n    date.setUTCHours(utcHours - 3);\n\n    // Obter os valores de data e hora em horário de Brasília\n    const brYear = date.getFullYear();\n    const brMonth = date.getMonth();\n    const brDay = date.getDate();\n    const brHours = date.getHours();\n    const brMinutes = date.getMinutes();\n    const brSeconds = date.getSeconds();\n\n    console.log(\n      `Data e hora em UTC-02:00: ${utcDay}/${\n        utcMonth + 1\n      }/${utcYear} ${utcHours}:${utcMinutes}:${utcSeconds}`\n    );\n    console.log(\n      `Data e hora em Brasília: ${brDay}/${\n        brMonth + 1\n      }/${brYear} ${brHours}:${brMinutes}:${brSeconds}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}