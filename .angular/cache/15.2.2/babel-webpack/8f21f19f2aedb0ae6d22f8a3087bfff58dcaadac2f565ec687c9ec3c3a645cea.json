{"ast":null,"code":"/*!\n * @license\n * chartjs-chart-financial\n * http://chartjs.org/\n * Version: 0.1.1\n *\n * Copyright 2021 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-chart-financial/blob/master/LICENSE.md\n */\nimport { Chart, Element, defaults, BarController } from 'chart.js';\nimport { merge, valueOrDefault, isNullOrUndef, clipArea, unclipArea } from 'chart.js/helpers';\nconst globalOpts$2 = Chart.defaults;\nglobalOpts$2.elements.financial = {\n  color: {\n    up: 'rgba(80, 160, 115, 1)',\n    down: 'rgba(215, 85, 65, 1)',\n    unchanged: 'rgba(90, 90, 90, 1)'\n  }\n};\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {Rectangle} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'low', 'high', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base); // use min because 0 pixel at top of screen\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const bounds = !bar || skipX && skipY ? false : getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nclass FinancialElement extends Element {\n  height() {\n    return this.base - this.y;\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      low,\n      high\n    } = this.getProps(['x', 'low', 'high'], useFinalPosition);\n    return {\n      x,\n      y: (high + low) / 2\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      open,\n      close\n    } = this.getProps(['x', 'open', 'close'], useFinalPosition);\n    return {\n      x,\n      y: (open + close) / 2\n    };\n  }\n}\nconst globalOpts$1 = Chart.defaults;\nclass OhlcElement extends FinancialElement {\n  draw(ctx) {\n    const me = this;\n    const {\n      x,\n      open,\n      high,\n      low,\n      close\n    } = me;\n    const armLengthRatio = valueOrDefault(me.armLengthRatio, globalOpts$1.elements.ohlc.armLengthRatio);\n    let armLength = valueOrDefault(me.armLength, globalOpts$1.elements.ohlc.armLength);\n    if (armLength === null) {\n      // The width of an ohlc is affected by barPercentage and categoryPercentage\n      // This behavior is caused by extending controller.financial, which extends controller.bar\n      // barPercentage and categoryPercentage are now set to 1.0 (see controller.ohlc)\n      // and armLengthRatio is multipled by 0.5,\n      // so that when armLengthRatio=1.0, the arms from neighbour ohcl touch,\n      // and when armLengthRatio=0.0, ohcl are just vertical lines.\n      armLength = me.width * armLengthRatio * 0.5;\n    }\n    if (close < open) {\n      ctx.strokeStyle = valueOrDefault(me.color ? me.color.up : undefined, globalOpts$1.elements.ohlc.color.up);\n    } else if (close > open) {\n      ctx.strokeStyle = valueOrDefault(me.color ? me.color.down : undefined, globalOpts$1.elements.ohlc.color.down);\n    } else {\n      ctx.strokeStyle = valueOrDefault(me.color ? me.color.unchanged : undefined, globalOpts$1.elements.ohlc.color.unchanged);\n    }\n    ctx.lineWidth = valueOrDefault(me.lineWidth, globalOpts$1.elements.ohlc.lineWidth);\n    ctx.beginPath();\n    ctx.moveTo(x, high);\n    ctx.lineTo(x, low);\n    ctx.moveTo(x - armLength, open);\n    ctx.lineTo(x, open);\n    ctx.moveTo(x + armLength, close);\n    ctx.lineTo(x, close);\n    ctx.stroke();\n  }\n}\nOhlcElement.id = 'ohlc';\nOhlcElement.defaults = merge({}, [globalOpts$1.elements.financial, {\n  lineWidth: 2,\n  armLength: null,\n  armLengthRatio: 0.8\n}]);\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n  let min = scale._length;\n  let prev, curr, i, ilen;\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, Math.abs(curr - prev)) : min;\n    prev = curr;\n  }\n  return min;\n}\n\n/**\n * This class is based off controller.bar.js from the upstream Chart.js library\n */\nclass FinancialController extends BarController {\n  getLabelAndValue(index) {\n    const me = this;\n    const parsed = me.getParsed(index);\n    const axis = me._cachedMeta.iScale.axis;\n    const {\n      o,\n      h,\n      l,\n      c\n    } = parsed;\n    const value = `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n    return {\n      label: `${me._cachedMeta.iScale.getLabelForValue(parsed[axis])}`,\n      value\n    };\n  }\n  getAllParsedValues() {\n    const meta = this._cachedMeta;\n    const axis = meta.iScale.axis;\n    const parsed = meta._parsed;\n    const values = [];\n    for (let i = 0; i < parsed.length; ++i) {\n      values.push(parsed[i][axis]);\n    }\n    return values;\n  }\n\n  /**\n   * Implement this ourselves since it doesn't handle high and low values\n   * https://github.com/chartjs/Chart.js/issues/7328\n   * @protected\n   */\n  getMinMax(scale) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const axis = meta.iScale.axis;\n    if (_parsed.length < 2) {\n      return {\n        min: 0,\n        max: 1\n      };\n    }\n    if (scale === meta.iScale) {\n      return {\n        min: _parsed[0][axis],\n        max: _parsed[_parsed.length - 1][axis]\n      };\n    }\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    for (let i = 0; i < _parsed.length; i++) {\n      const data = _parsed[i];\n      min = Math.min(min, data.l);\n      max = Math.max(max, data.h);\n    }\n    return {\n      min,\n      max\n    };\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const axis = iScale.axis;\n    const pixels = [];\n    for (let i = 0; i < meta.data.length; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[axis]));\n    }\n    const barThickness = opts.barThickness;\n    const min = computeMinSampleSize(iScale, pixels);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n   * @protected\n   */\n  calculateElementProperties(index, ruler, reset, options) {\n    const me = this;\n    const vscale = me._cachedMeta.vScale;\n    const base = vscale.getBasePixel();\n    const ipixels = me._calculateBarIndexPixels(index, ruler, options);\n    const data = me.chart.data.datasets[me.index].data[index];\n    const open = vscale.getPixelForValue(data.o);\n    const high = vscale.getPixelForValue(data.h);\n    const low = vscale.getPixelForValue(data.l);\n    const close = vscale.getPixelForValue(data.c);\n    return {\n      base: reset ? base : low,\n      x: ipixels.center,\n      y: (low + high) / 2,\n      width: ipixels.size,\n      open,\n      high,\n      low,\n      close\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const rects = me._cachedMeta.data;\n    clipArea(chart.ctx, chart.chartArea);\n    for (let i = 0; i < rects.length; ++i) {\n      rects[i].draw(me._ctx);\n    }\n    unclipArea(chart.ctx);\n  }\n}\nFinancialController.overrides = {\n  label: '',\n  parsing: false,\n  hover: {\n    mode: 'label'\n  },\n  datasets: {\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    animation: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'open', 'high', 'low', 'close']\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'timeseries',\n      offset: true,\n      ticks: {\n        major: {\n          enabled: true\n        },\n        fontStyle: context => context.tick.major ? 'bold' : undefined,\n        source: 'data',\n        maxRotation: 0,\n        autoSkip: true,\n        autoSkipPadding: 75,\n        sampleSize: 100\n      },\n      afterBuildTicks: scale => {\n        const DateTime = window && window.luxon && window.luxon.DateTime;\n        if (!DateTime) {\n          return;\n        }\n        const majorUnit = scale._majorUnit;\n        const ticks = scale.ticks;\n        const firstTick = ticks[0];\n        if (!firstTick) {\n          return;\n        }\n        let val = DateTime.fromMillis(firstTick.value);\n        if (majorUnit === 'minute' && val.second === 0 || majorUnit === 'hour' && val.minute === 0 || majorUnit === 'day' && val.hour === 9 || majorUnit === 'month' && val.day <= 3 && val.weekday === 1 || majorUnit === 'year' && val.month === 1) {\n          firstTick.major = true;\n        } else {\n          firstTick.major = false;\n        }\n        let lastMajor = val.get(majorUnit);\n        for (let i = 1; i < ticks.length; i++) {\n          const tick = ticks[i];\n          val = DateTime.fromMillis(tick.value);\n          const currMajor = val.get(majorUnit);\n          tick.major = currMajor !== lastMajor;\n          lastMajor = currMajor;\n        }\n        scale.ticks = ticks;\n      }\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      intersect: false,\n      mode: 'index',\n      callbacks: {\n        label(ctx) {\n          const point = ctx.parsed;\n          if (!isNullOrUndef(point.y)) {\n            return defaults.plugins.tooltip.callbacks.label(ctx);\n          }\n          const {\n            o,\n            h,\n            l,\n            c\n          } = point;\n          return `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n        }\n      }\n    }\n  }\n};\nclass OhlcController extends FinancialController {\n  updateElements(elements, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const ruler = me._ruler || me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = 0; i < count; i++) {\n      const options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      const baseProperties = me.calculateElementProperties(i, ruler, mode === 'reset', options);\n      const properties = {\n        ...baseProperties,\n        datasetLabel: dataset.label || '',\n        lineWidth: dataset.lineWidth,\n        armLength: dataset.armLength,\n        armLengthRatio: dataset.armLengthRatio,\n        color: dataset.color\n      };\n      if (includeOptions) {\n        properties.options = options;\n      }\n      me.updateElement(elements[i], i, properties, mode);\n    }\n  }\n}\nOhlcController.id = 'ohlc';\nOhlcController.defaults = merge({\n  dataElementType: OhlcElement.id,\n  datasets: {\n    barPercentage: 1.0,\n    categoryPercentage: 1.0\n  }\n}, Chart.defaults.financial);\nconst globalOpts = Chart.defaults;\nclass CandlestickElement extends FinancialElement {\n  draw(ctx) {\n    const me = this;\n    const {\n      x,\n      open,\n      high,\n      low,\n      close\n    } = me;\n    let borderColors = me.borderColor;\n    if (typeof borderColors === 'string') {\n      borderColors = {\n        up: borderColors,\n        down: borderColors,\n        unchanged: borderColors\n      };\n    }\n    let borderColor;\n    if (close < open) {\n      borderColor = valueOrDefault(borderColors ? borderColors.up : undefined, globalOpts.elements.candlestick.borderColor);\n      ctx.fillStyle = valueOrDefault(me.color ? me.color.up : undefined, globalOpts.elements.candlestick.color.up);\n    } else if (close > open) {\n      borderColor = valueOrDefault(borderColors ? borderColors.down : undefined, globalOpts.elements.candlestick.borderColor);\n      ctx.fillStyle = valueOrDefault(me.color ? me.color.down : undefined, globalOpts.elements.candlestick.color.down);\n    } else {\n      borderColor = valueOrDefault(borderColors ? borderColors.unchanged : undefined, globalOpts.elements.candlestick.borderColor);\n      ctx.fillStyle = valueOrDefault(me.color ? me.color.unchanged : undefined, globalOpts.elements.candlestick.color.unchanged);\n    }\n    ctx.lineWidth = valueOrDefault(me.borderWidth, globalOpts.elements.candlestick.borderWidth);\n    ctx.strokeStyle = valueOrDefault(borderColor, globalOpts.elements.candlestick.borderColor);\n    ctx.beginPath();\n    ctx.moveTo(x, high);\n    ctx.lineTo(x, Math.min(open, close));\n    ctx.moveTo(x, low);\n    ctx.lineTo(x, Math.max(open, close));\n    ctx.stroke();\n    ctx.fillRect(x - me.width / 2, close, me.width, open - close);\n    ctx.strokeRect(x - me.width / 2, close, me.width, open - close);\n    ctx.closePath();\n  }\n}\nCandlestickElement.id = 'candlestick';\nCandlestickElement.defaults = merge({}, [globalOpts.elements.financial, {\n  borderColor: globalOpts.elements.financial.color.unchanged,\n  borderWidth: 1\n}]);\nclass CandlestickController extends FinancialController {\n  updateElements(elements, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const ruler = me._ruler || me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < count; i++) {\n      const options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      const baseProperties = me.calculateElementProperties(i, ruler, mode === 'reset', options);\n      const properties = {\n        ...baseProperties,\n        datasetLabel: dataset.label || '',\n        // label: '', // to get label value please use dataset.data[index].label\n\n        // Appearance\n        color: dataset.color,\n        borderColor: dataset.borderColor,\n        borderWidth: dataset.borderWidth\n      };\n      if (includeOptions) {\n        properties.options = options;\n      }\n      me.updateElement(elements[i], i, properties, mode);\n    }\n  }\n}\nCandlestickController.id = 'candlestick';\nCandlestickController.defaults = merge({\n  dataElementType: CandlestickElement.id\n}, Chart.defaults.financial);\nexport { CandlestickController, CandlestickElement, OhlcController, OhlcElement };","map":{"version":3,"names":["Chart","Element","defaults","BarController","merge","valueOrDefault","isNullOrUndef","clipArea","unclipArea","globalOpts$2","elements","financial","color","up","down","unchanged","getBarBounds","bar","useFinalPosition","x","y","base","width","height","getProps","left","right","top","bottom","half","horizontal","Math","min","max","inRange","skipX","skipY","bounds","FinancialElement","mouseX","mouseY","inXRange","inYRange","getRange","axis","getCenterPoint","low","high","tooltipPosition","open","close","globalOpts$1","OhlcElement","draw","ctx","me","armLengthRatio","ohlc","armLength","strokeStyle","undefined","lineWidth","beginPath","moveTo","lineTo","stroke","id","computeMinSampleSize","scale","pixels","_length","prev","curr","i","ilen","length","abs","ticks","getPixelForTick","FinancialController","getLabelAndValue","index","parsed","getParsed","_cachedMeta","iScale","o","h","l","c","value","label","getLabelForValue","getAllParsedValues","meta","_parsed","values","push","getMinMax","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","data","_getRuler","opts","options","getPixelForValue","barThickness","start","_startPixel","end","_endPixel","stackCount","_getStackCount","ratio","categoryPercentage","barPercentage","calculateElementProperties","ruler","reset","vscale","vScale","getBasePixel","ipixels","_calculateBarIndexPixels","chart","datasets","center","size","rects","chartArea","_ctx","overrides","parsing","hover","mode","animation","numbers","type","properties","scales","offset","major","enabled","fontStyle","context","tick","source","maxRotation","autoSkip","autoSkipPadding","sampleSize","afterBuildTicks","DateTime","window","luxon","majorUnit","_majorUnit","firstTick","val","fromMillis","second","minute","hour","day","weekday","month","lastMajor","get","currMajor","plugins","tooltip","intersect","callbacks","point","OhlcController","updateElements","count","dataset","getDataset","_ruler","firstOpts","resolveDataElementOptions","sharedOptions","getSharedOptions","includeOptions","baseProperties","datasetLabel","updateElement","dataElementType","globalOpts","CandlestickElement","borderColors","borderColor","candlestick","fillStyle","borderWidth","fillRect","strokeRect","closePath","CandlestickController","updateSharedOptions"],"sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/node_modules/chartjs-chart-financial/dist/chartjs-chart-financial.esm.js"],"sourcesContent":["/*!\n * @license\n * chartjs-chart-financial\n * http://chartjs.org/\n * Version: 0.1.1\n *\n * Copyright 2021 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-chart-financial/blob/master/LICENSE.md\n */\nimport { Chart, Element, defaults, BarController } from 'chart.js';\nimport { merge, valueOrDefault, isNullOrUndef, clipArea, unclipArea } from 'chart.js/helpers';\n\nconst globalOpts$2 = Chart.defaults;\n\nglobalOpts$2.elements.financial = {\n\tcolor: {\n\t\tup: 'rgba(80, 160, 115, 1)',\n\t\tdown: 'rgba(215, 85, 65, 1)',\n\t\tunchanged: 'rgba(90, 90, 90, 1)',\n\t}\n};\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {Rectangle} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n\tconst {x, y, base, width, height} = bar.getProps(['x', 'low', 'high', 'width', 'height'], useFinalPosition);\n\n\tlet left, right, top, bottom, half;\n\n\tif (bar.horizontal) {\n\t\thalf = height / 2;\n\t\tleft = Math.min(x, base);\n\t\tright = Math.max(x, base);\n\t\ttop = y - half;\n\t\tbottom = y + half;\n\t} else {\n\t\thalf = width / 2;\n\t\tleft = x - half;\n\t\tright = x + half;\n\t\ttop = Math.min(y, base); // use min because 0 pixel at top of screen\n\t\tbottom = Math.max(y, base);\n\t}\n\n\treturn {left, top, right, bottom};\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n\tconst skipX = x === null;\n\tconst skipY = y === null;\n\tconst bounds = !bar || (skipX && skipY) ? false : getBarBounds(bar, useFinalPosition);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nclass FinancialElement extends Element {\n\n\theight() {\n\t\treturn this.base - this.y;\n\t}\n\n\tinRange(mouseX, mouseY, useFinalPosition) {\n\t\treturn inRange(this, mouseX, mouseY, useFinalPosition);\n\t}\n\n\tinXRange(mouseX, useFinalPosition) {\n\t\treturn inRange(this, mouseX, null, useFinalPosition);\n\t}\n\n\tinYRange(mouseY, useFinalPosition) {\n\t\treturn inRange(this, null, mouseY, useFinalPosition);\n\t}\n\n\tgetRange(axis) {\n\t\treturn axis === 'x' ? this.width / 2 : this.height / 2;\n\t}\n\n\tgetCenterPoint(useFinalPosition) {\n\t\tconst {x, low, high} = this.getProps(['x', 'low', 'high'], useFinalPosition);\n\t\treturn {\n\t\t\tx,\n\t\t\ty: (high + low) / 2\n\t\t};\n\t}\n\n\ttooltipPosition(useFinalPosition) {\n\t\tconst {x, open, close} = this.getProps(['x', 'open', 'close'], useFinalPosition);\n\t\treturn {\n\t\t\tx,\n\t\t\ty: (open + close) / 2\n\t\t};\n\t}\n}\n\nconst globalOpts$1 = Chart.defaults;\n\nclass OhlcElement extends FinancialElement {\n\tdraw(ctx) {\n\t\tconst me = this;\n\n\t\tconst {x, open, high, low, close} = me;\n\n\t\tconst armLengthRatio = valueOrDefault(me.armLengthRatio, globalOpts$1.elements.ohlc.armLengthRatio);\n\t\tlet armLength = valueOrDefault(me.armLength, globalOpts$1.elements.ohlc.armLength);\n\t\tif (armLength === null) {\n\t\t\t// The width of an ohlc is affected by barPercentage and categoryPercentage\n\t\t\t// This behavior is caused by extending controller.financial, which extends controller.bar\n\t\t\t// barPercentage and categoryPercentage are now set to 1.0 (see controller.ohlc)\n\t\t\t// and armLengthRatio is multipled by 0.5,\n\t\t\t// so that when armLengthRatio=1.0, the arms from neighbour ohcl touch,\n\t\t\t// and when armLengthRatio=0.0, ohcl are just vertical lines.\n\t\t\tarmLength = me.width * armLengthRatio * 0.5;\n\t\t}\n\n\t\tif (close < open) {\n\t\t\tctx.strokeStyle = valueOrDefault(me.color ? me.color.up : undefined, globalOpts$1.elements.ohlc.color.up);\n\t\t} else if (close > open) {\n\t\t\tctx.strokeStyle = valueOrDefault(me.color ? me.color.down : undefined, globalOpts$1.elements.ohlc.color.down);\n\t\t} else {\n\t\t\tctx.strokeStyle = valueOrDefault(me.color ? me.color.unchanged : undefined, globalOpts$1.elements.ohlc.color.unchanged);\n\t\t}\n\t\tctx.lineWidth = valueOrDefault(me.lineWidth, globalOpts$1.elements.ohlc.lineWidth);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, high);\n\t\tctx.lineTo(x, low);\n\t\tctx.moveTo(x - armLength, open);\n\t\tctx.lineTo(x, open);\n\t\tctx.moveTo(x + armLength, close);\n\t\tctx.lineTo(x, close);\n\t\tctx.stroke();\n\t}\n}\n\nOhlcElement.id = 'ohlc';\nOhlcElement.defaults = merge({}, [globalOpts$1.elements.financial, {\n\tlineWidth: 2,\n\tarmLength: null,\n\tarmLengthRatio: 0.8,\n}]);\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tlet min = scale._length;\n\tlet prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, Math.abs(curr - prev)) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * This class is based off controller.bar.js from the upstream Chart.js library\n */\nclass FinancialController extends BarController {\n\n\tgetLabelAndValue(index) {\n\t\tconst me = this;\n\t\tconst parsed = me.getParsed(index);\n\t\tconst axis = me._cachedMeta.iScale.axis;\n\n\t\tconst {o, h, l, c} = parsed;\n\t\tconst value = `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n\n\t\treturn {\n\t\t\tlabel: `${me._cachedMeta.iScale.getLabelForValue(parsed[axis])}`,\n\t\t\tvalue\n\t\t};\n\t}\n\n\tgetAllParsedValues() {\n\t\tconst meta = this._cachedMeta;\n\t\tconst axis = meta.iScale.axis;\n\t\tconst parsed = meta._parsed;\n\t\tconst values = [];\n\t\tfor (let i = 0; i < parsed.length; ++i) {\n\t\t\tvalues.push(parsed[i][axis]);\n\t\t}\n\t\treturn values;\n\t}\n\n\t/**\n\t * Implement this ourselves since it doesn't handle high and low values\n\t * https://github.com/chartjs/Chart.js/issues/7328\n\t * @protected\n\t */\n\tgetMinMax(scale) {\n\t\tconst meta = this._cachedMeta;\n\t\tconst _parsed = meta._parsed;\n\t\tconst axis = meta.iScale.axis;\n\n\t\tif (_parsed.length < 2) {\n\t\t\treturn {min: 0, max: 1};\n\t\t}\n\n\t\tif (scale === meta.iScale) {\n\t\t\treturn {min: _parsed[0][axis], max: _parsed[_parsed.length - 1][axis]};\n\t\t}\n\n\t\tlet min = Number.POSITIVE_INFINITY;\n\t\tlet max = Number.NEGATIVE_INFINITY;\n\t\tfor (let i = 0; i < _parsed.length; i++) {\n\t\t\tconst data = _parsed[i];\n\t\t\tmin = Math.min(min, data.l);\n\t\t\tmax = Math.max(max, data.h);\n\t\t}\n\t\treturn {min, max};\n\t}\n\n\t_getRuler() {\n\t\tconst me = this;\n\t\tconst opts = me.options;\n\t\tconst meta = me._cachedMeta;\n\t\tconst iScale = meta.iScale;\n\t\tconst axis = iScale.axis;\n\t\tconst pixels = [];\n\t\tfor (let i = 0; i < meta.data.length; ++i) {\n\t\t\tpixels.push(iScale.getPixelForValue(me.getParsed(i)[axis]));\n\t\t}\n\t\tconst barThickness = opts.barThickness;\n\t\tconst min = computeMinSampleSize(iScale, pixels);\n\t\treturn {\n\t\t\tmin,\n\t\t\tpixels,\n\t\t\tstart: iScale._startPixel,\n\t\t\tend: iScale._endPixel,\n\t\t\tstackCount: me._getStackCount(),\n\t\t\tscale: iScale,\n\t\t\tratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n\t\t};\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tcalculateElementProperties(index, ruler, reset, options) {\n\t\tconst me = this;\n\t\tconst vscale = me._cachedMeta.vScale;\n\t\tconst base = vscale.getBasePixel();\n\t\tconst ipixels = me._calculateBarIndexPixels(index, ruler, options);\n\t\tconst data = me.chart.data.datasets[me.index].data[index];\n\t\tconst open = vscale.getPixelForValue(data.o);\n\t\tconst high = vscale.getPixelForValue(data.h);\n\t\tconst low = vscale.getPixelForValue(data.l);\n\t\tconst close = vscale.getPixelForValue(data.c);\n\n\t\treturn {\n\t\t\tbase: reset ? base : low,\n\t\t\tx: ipixels.center,\n\t\t\ty: (low + high) / 2,\n\t\t\twidth: ipixels.size,\n\t\t\topen,\n\t\t\thigh,\n\t\t\tlow,\n\t\t\tclose\n\t\t};\n\t}\n\n\tdraw() {\n\t\tconst me = this;\n\t\tconst chart = me.chart;\n\t\tconst rects = me._cachedMeta.data;\n\t\tclipArea(chart.ctx, chart.chartArea);\n\t\tfor (let i = 0; i < rects.length; ++i) {\n\t\t\trects[i].draw(me._ctx);\n\t\t}\n\t\tunclipArea(chart.ctx);\n\t}\n\n}\n\nFinancialController.overrides = {\n\tlabel: '',\n\n\tparsing: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tdatasets: {\n\t\tcategoryPercentage: 0.8,\n\t\tbarPercentage: 0.9,\n\t\tanimation: {\n\t\t\tnumbers: {\n\t\t\t\ttype: 'number',\n\t\t\t\tproperties: ['x', 'y', 'base', 'width', 'open', 'high', 'low', 'close']\n\t\t\t}\n\t\t}\n\t},\n\n\tscales: {\n\t\tx: {\n\t\t\ttype: 'timeseries',\n\t\t\toffset: true,\n\t\t\tticks: {\n\t\t\t\tmajor: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t\tfontStyle: context => context.tick.major ? 'bold' : undefined,\n\t\t\t\tsource: 'data',\n\t\t\t\tmaxRotation: 0,\n\t\t\t\tautoSkip: true,\n\t\t\t\tautoSkipPadding: 75,\n\t\t\t\tsampleSize: 100\n\t\t\t},\n\t\t\tafterBuildTicks: scale => {\n\t\t\t\tconst DateTime = window && window.luxon && window.luxon.DateTime;\n\t\t\t\tif (!DateTime) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst majorUnit = scale._majorUnit;\n\t\t\t\tconst ticks = scale.ticks;\n\t\t\t\tconst firstTick = ticks[0];\n\t\t\t\tif (!firstTick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet val = DateTime.fromMillis(firstTick.value);\n\t\t\t\tif ((majorUnit === 'minute' && val.second === 0)\n\t\t\t\t\t\t|| (majorUnit === 'hour' && val.minute === 0)\n\t\t\t\t\t\t|| (majorUnit === 'day' && val.hour === 9)\n\t\t\t\t\t\t|| (majorUnit === 'month' && val.day <= 3 && val.weekday === 1)\n\t\t\t\t\t\t|| (majorUnit === 'year' && val.month === 1)) {\n\t\t\t\t\tfirstTick.major = true;\n\t\t\t\t} else {\n\t\t\t\t\tfirstTick.major = false;\n\t\t\t\t}\n\t\t\t\tlet lastMajor = val.get(majorUnit);\n\n\t\t\t\tfor (let i = 1; i < ticks.length; i++) {\n\t\t\t\t\tconst tick = ticks[i];\n\t\t\t\t\tval = DateTime.fromMillis(tick.value);\n\t\t\t\t\tconst currMajor = val.get(majorUnit);\n\t\t\t\t\ttick.major = currMajor !== lastMajor;\n\t\t\t\t\tlastMajor = currMajor;\n\t\t\t\t}\n\t\t\t\tscale.ticks = ticks;\n\t\t\t}\n\t\t},\n\t\ty: {\n\t\t\ttype: 'linear'\n\t\t}\n\t},\n\n\tplugins: {\n\t\ttooltip: {\n\t\t\tintersect: false,\n\t\t\tmode: 'index',\n\t\t\tcallbacks: {\n\t\t\t\tlabel(ctx) {\n\t\t\t\t\tconst point = ctx.parsed;\n\n\t\t\t\t\tif (!isNullOrUndef(point.y)) {\n\t\t\t\t\t\treturn defaults.plugins.tooltip.callbacks.label(ctx);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst {o, h, l, c} = point;\n\n\t\t\t\t\treturn `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nclass OhlcController extends FinancialController {\n\n\tupdateElements(elements, start, count, mode) {\n\t\tconst me = this;\n\t\tconst dataset = me.getDataset();\n\t\tconst ruler = me._ruler || me._getRuler();\n\t\tconst firstOpts = me.resolveDataElementOptions(start, mode);\n\t\tconst sharedOptions = me.getSharedOptions(firstOpts);\n\t\tconst includeOptions = me.includeOptions(mode, sharedOptions);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst options = sharedOptions || me.resolveDataElementOptions(i, mode);\n\n\t\t\tconst baseProperties = me.calculateElementProperties(i, ruler, mode === 'reset', options);\n\t\t\tconst properties = {\n\t\t\t\t...baseProperties,\n\t\t\t\tdatasetLabel: dataset.label || '',\n\t\t\t\tlineWidth: dataset.lineWidth,\n\t\t\t\tarmLength: dataset.armLength,\n\t\t\t\tarmLengthRatio: dataset.armLengthRatio,\n\t\t\t\tcolor: dataset.color,\n\t\t\t};\n\n\t\t\tif (includeOptions) {\n\t\t\t\tproperties.options = options;\n\t\t\t}\n\t\t\tme.updateElement(elements[i], i, properties, mode);\n\t\t}\n\t}\n\n}\n\nOhlcController.id = 'ohlc';\nOhlcController.defaults = merge({\n\tdataElementType: OhlcElement.id,\n\tdatasets: {\n\t\tbarPercentage: 1.0,\n\t\tcategoryPercentage: 1.0\n\t}\n}, Chart.defaults.financial);\n\nconst globalOpts = Chart.defaults;\n\nclass CandlestickElement extends FinancialElement {\n\tdraw(ctx) {\n\t\tconst me = this;\n\n\t\tconst {x, open, high, low, close} = me;\n\n\t\tlet borderColors = me.borderColor;\n\t\tif (typeof borderColors === 'string') {\n\t\t\tborderColors = {\n\t\t\t\tup: borderColors,\n\t\t\t\tdown: borderColors,\n\t\t\t\tunchanged: borderColors\n\t\t\t};\n\t\t}\n\n\t\tlet borderColor;\n\t\tif (close < open) {\n\t\t\tborderColor = valueOrDefault(borderColors ? borderColors.up : undefined, globalOpts.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = valueOrDefault(me.color ? me.color.up : undefined, globalOpts.elements.candlestick.color.up);\n\t\t} else if (close > open) {\n\t\t\tborderColor = valueOrDefault(borderColors ? borderColors.down : undefined, globalOpts.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = valueOrDefault(me.color ? me.color.down : undefined, globalOpts.elements.candlestick.color.down);\n\t\t} else {\n\t\t\tborderColor = valueOrDefault(borderColors ? borderColors.unchanged : undefined, globalOpts.elements.candlestick.borderColor);\n\t\t\tctx.fillStyle = valueOrDefault(me.color ? me.color.unchanged : undefined, globalOpts.elements.candlestick.color.unchanged);\n\t\t}\n\n\t\tctx.lineWidth = valueOrDefault(me.borderWidth, globalOpts.elements.candlestick.borderWidth);\n\t\tctx.strokeStyle = valueOrDefault(borderColor, globalOpts.elements.candlestick.borderColor);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x, high);\n\t\tctx.lineTo(x, Math.min(open, close));\n\t\tctx.moveTo(x, low);\n\t\tctx.lineTo(x, Math.max(open, close));\n\t\tctx.stroke();\n\t\tctx.fillRect(x - me.width / 2, close, me.width, open - close);\n\t\tctx.strokeRect(x - me.width / 2, close, me.width, open - close);\n\t\tctx.closePath();\n\t}\n}\n\nCandlestickElement.id = 'candlestick';\nCandlestickElement.defaults = merge({}, [globalOpts.elements.financial, {\n\tborderColor: globalOpts.elements.financial.color.unchanged,\n\tborderWidth: 1,\n}]);\n\nclass CandlestickController extends FinancialController {\n\n\tupdateElements(elements, start, count, mode) {\n\t\tconst me = this;\n\t\tconst dataset = me.getDataset();\n\t\tconst ruler = me._ruler || me._getRuler();\n\t\tconst firstOpts = me.resolveDataElementOptions(start, mode);\n\t\tconst sharedOptions = me.getSharedOptions(firstOpts);\n\t\tconst includeOptions = me.includeOptions(mode, sharedOptions);\n\n\t\tme.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n\t\tfor (let i = start; i < count; i++) {\n\t\t\tconst options = sharedOptions || me.resolveDataElementOptions(i, mode);\n\n\t\t\tconst baseProperties = me.calculateElementProperties(i, ruler, mode === 'reset', options);\n\t\t\tconst properties = {\n\t\t\t\t...baseProperties,\n\t\t\t\tdatasetLabel: dataset.label || '',\n\t\t\t\t// label: '', // to get label value please use dataset.data[index].label\n\n\t\t\t\t// Appearance\n\t\t\t\tcolor: dataset.color,\n\t\t\t\tborderColor: dataset.borderColor,\n\t\t\t\tborderWidth: dataset.borderWidth,\n\t\t\t};\n\n\t\t\tif (includeOptions) {\n\t\t\t\tproperties.options = options;\n\t\t\t}\n\t\t\tme.updateElement(elements[i], i, properties, mode);\n\t\t}\n\t}\n\n}\n\nCandlestickController.id = 'candlestick';\nCandlestickController.defaults = merge({\n\tdataElementType: CandlestickElement.id\n}, Chart.defaults.financial);\n\nexport { CandlestickController, CandlestickElement, OhlcController, OhlcElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}