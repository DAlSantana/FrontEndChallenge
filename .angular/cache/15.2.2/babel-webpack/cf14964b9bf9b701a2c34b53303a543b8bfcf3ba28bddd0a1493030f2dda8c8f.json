{"ast":null,"code":"import { enviroment } from \"enviroment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar Interval;\n(function (Interval) {\n  Interval[\"day\"] = \"1d\";\n})(Interval || (Interval = {}));\nvar Range;\n(function (Range) {\n  Range[\"month\"] = \"1mo\";\n})(Range || (Range = {}));\nexport class QuoteService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  consultStockVaration(stock, interval, range) {\n    return this.httpClient.get(`${enviroment.test}/api/${stock}?interval=${interval}&range=${range}`);\n  }\n}\nQuoteService.ɵfac = function QuoteService_Factory(t) {\n  return new (t || QuoteService)(i0.ɵɵinject(i1.HttpClient));\n};\nQuoteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuoteService,\n  factory: QuoteService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAQ,YAAY;;;AAEvC,IAAKC,QAEJ;AAFD,WAAKA,QAAQ;EACXA,sBAAU;AACZ,CAAC,EAFIA,QAAQ,KAARA,QAAQ;AAGb,IAAKC,KAEJ;AAFD,WAAKA,KAAK;EACRA,sBAAa;AACf,CAAC,EAFIA,KAAK,KAALA,KAAK;AAMV,OAAM,MAAOC,YAAY;EACvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAe;EAEtCC,oBAAoBA,CACzBC,KAAa,EACbC,QAAgB,EAChBC,KAAa;IAEb,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CACxB,GAAGV,UAAU,CAACW,IAAI,QAAQJ,KAAK,aAAaC,QAAQ,UAAUC,KAAK,EAAE,CACtE;EACH;;AAXWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAS,SAAZT,YAAY;EAAAU,YAFX;AAAM","names":["enviroment","Interval","Range","QuoteService","constructor","httpClient","consultStockVaration","stock","interval","range","get","test","factory","providedIn"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/service/quoteService.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { enviroment } from \"enviroment\";\n\nenum Interval {\n  day = `1d`,\n}\nenum Range {\n  month = `1mo`,\n}\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QuoteService {\n  constructor(private httpClient: HttpClient) {}\n\n  public consultStockVaration(\n    stock: string,\n    interval: string,\n    range: string\n  ): Observable<any> {\n    return this.httpClient.get(\n      `${enviroment.test}/api/${stock}?interval=${interval}&range=${range}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}