{"ast":null,"code":"import _asyncToGenerator from \"/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChartDto } from \"src/models/chartDto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../proxy/proxy.service\";\nexport class AdapterSetvice {\n  constructor(proxyService) {\n    this.proxyService = proxyService;\n  }\n  getStockValues(stock, interval, range) {\n    var _this = this;\n    new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (resolve) {\n        yield resolve(_this.proxyService.consultStockVaration(stock, interval, range).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (res) {\n            console.log(res);\n            _this.data = res;\n          });\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }()));\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).then(() => console.log(\"this\", this.data));\n    return this.converterchartServiceToChartDto();\n  }\n  converterchartServiceToChartDto() {\n    const chartDto = new ChartDto(this.data.chart.result[0].indicators.quote[0].open, this.data.chart.result[0].timestamp);\n    return chartDto;\n  }\n}\nAdapterSetvice.ɵfac = function AdapterSetvice_Factory(t) {\n  return new (t || AdapterSetvice)(i0.ɵɵinject(i1.ProxyService));\n};\nAdapterSetvice.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdapterSetvice,\n  factory: AdapterSetvice.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";AACA,SAASA,QAAQ,QAAQ,qBAAqB;;;AAO9C,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAiB;EAC1CC,cAAcA,CAACC,KAAa,EAAEC,QAAkB,EAAEC,KAAY;IAAA;IACnE,IAAIC,OAAO;MAAA,6BAAC,WAAOC,OAAO,EAAI;QAC5B,MAAMA,OAAO,CACXC,KAAI,CAACP,YAAY,CACdQ,oBAAoB,CAACN,KAAK,EAAEC,QAAQ,EAAEC,KAAK,CAAC,CAC5CK,SAAS;UAAA,8BAAC,WAAOC,GAAQ,EAAI;YAC5BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;YAChBH,KAAI,CAACM,IAAI,GAAGH,GAAG;UACjB,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC,CACL;MACH,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC,CAACI,IAAI,CAAC,MAAMH,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACC,IAAI,CAAC,CAAC;IAC7C,OAAO,IAAI,CAACE,+BAA+B,EAAE;EAC/C;EACOA,+BAA+BA;IACpC,MAAMC,QAAQ,GAAG,IAAInB,QAAQ,CAC3B,IAAI,CAACgB,IAAI,CAACI,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAClD,IAAI,CAACR,IAAI,CAACI,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACI,SAAS,CACpC;IACD,OAAON,QAAQ;EACjB;;AAtBWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAyB,SAAdzB,cAAc;EAAA0B,YAFb;AAAM","names":["ChartDto","AdapterSetvice","constructor","proxyService","getStockValues","stock","interval","range","Promise","resolve","_this","consultStockVaration","subscribe","res","console","log","data","then","converterchartServiceToChartDto","chartDto","chart","result","indicators","quote","open","timestamp","factory","providedIn"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/acl/adapter/adapter.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ChartDto } from \"src/models/chartDto\";\nimport { Interval } from \"src/models/interval.enum\";\nimport { Range } from \"src/models/range.enum\";\nimport { ProxyService } from \"../proxy/proxy.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdapterSetvice {\n  private data: any;\n  constructor(private proxyService: ProxyService) {}\n  public getStockValues(stock: string, interval: Interval, range: Range) {\n    new Promise(async (resolve) => {\n      await resolve(\n        this.proxyService\n          .consultStockVaration(stock, interval, range)\n          .subscribe(async (res: any) => {\n            console.log(res);\n            this.data = res;\n          })\n      );\n    }).then(() => console.log(\"this\", this.data));\n    return this.converterchartServiceToChartDto();\n  }\n  public converterchartServiceToChartDto(): ChartDto {\n    const chartDto = new ChartDto(\n      this.data.chart.result[0].indicators.quote[0].open,\n      this.data.chart.result[0].timestamp\n    );\n    return chartDto;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}