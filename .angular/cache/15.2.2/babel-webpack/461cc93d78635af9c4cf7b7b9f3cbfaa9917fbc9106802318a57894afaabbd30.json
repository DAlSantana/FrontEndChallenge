{"ast":null,"code":"export class TimeConverter {\n  convertTimeSteampToBrazilianDateTime(start, end) {\n    const jsonStr = `{\"timezone\": \"BRST\", \"end\": ${end}, \"start\": ${start}, \"gmtoffset\": -7200}`;\n    // Converte a string JSON em um objeto JavaScript\n    const data = JSON.parse(jsonStr);\n    // Converte o timestamp em segundos para uma data JavaScript\n    const startTime = new Date(data.start * 1000);\n    const endTime = new Date(data.end * 1000);\n    // Define o fuso horário da B3 como America/Sao_Paulo\n    const b3TimeZone = \"America/Sao_Paulo\";\n    // Converte a hora de início e fechamento para o fuso horário da B3\n    const b3StartTime = startTime.toLocaleString(\"pt-BR\", {\n      timeZone: b3TimeZone\n    });\n    const b3EndTime = endTime.toLocaleString(\"pt-BR\", {\n      timeZone: b3TimeZone\n    });\n    // Imprime a hora de início e fechamento da B3 no formato dd/mm/yyyy hh:mm:ss\n    const b3DateFormat = {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\"\n    };\n    const b3TimeFormat = {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    };\n    const b3StartTimeStr = new Date(b3StartTime).toLocaleString(\"pt-BR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n    const b3EndTimeStr = new Date(b3EndTime).toLocaleString(\"pt-BR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n    console.log(`Horário de abertura da B3: ${b3StartTimeStr}`);\n    console.log(`Horário de fechamento da B3: ${b3EndTimeStr}`);\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAM,MAAOA,aAAa;EACjBC,oCAAoCA,CAACC,KAAa,EAAEC,GAAW;IACpE,MAAMC,OAAO,GAAG,+BAA+BD,GAAG,cAAcD,KAAK,uBAAuB;IAE5F;IACA,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;IAEhC;IACA,MAAMI,SAAS,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACH,KAAK,GAAG,IAAI,CAAC;IAC7C,MAAMQ,OAAO,GAAG,IAAID,IAAI,CAACJ,IAAI,CAACF,GAAG,GAAG,IAAI,CAAC;IAEzC;IACA,MAAMQ,UAAU,GAAG,mBAAmB;IAEtC;IACA,MAAMC,WAAW,GAAGJ,SAAS,CAACK,cAAc,CAAC,OAAO,EAAE;MACpDC,QAAQ,EAAEH;KACX,CAAC;IACF,MAAMI,SAAS,GAAGL,OAAO,CAACG,cAAc,CAAC,OAAO,EAAE;MAAEC,QAAQ,EAAEH;IAAU,CAAE,CAAC;IAE3E;IACA,MAAMK,YAAY,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAS,CAAE;IAC1E,MAAMC,YAAY,GAAG;MACnBC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;KACT;IACD,MAAMC,cAAc,GAAG,IAAIf,IAAI,CAACG,WAAW,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MACnEI,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfE,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;KACT,CAAC;IACF,MAAME,YAAY,GAAG,IAAIhB,IAAI,CAACM,SAAS,CAAC,CAACF,cAAc,CAAC,OAAO,EAAE;MAC/DI,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfE,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;KACT,CAAC;IAEFG,OAAO,CAACC,GAAG,CAAC,8BAA8BH,cAAc,EAAE,CAAC;IAC3DE,OAAO,CAACC,GAAG,CAAC,gCAAgCF,YAAY,EAAE,CAAC;EAC7D","names":["TimeConverter","convertTimeSteampToBrazilianDateTime","start","end","jsonStr","data","JSON","parse","startTime","Date","endTime","b3TimeZone","b3StartTime","toLocaleString","timeZone","b3EndTime","b3DateFormat","day","month","year","b3TimeFormat","hour","minute","second","b3StartTimeStr","b3EndTimeStr","console","log"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/utils/timeConverter.ts"],"sourcesContent":["export class TimeConverter {\n  public convertTimeSteampToBrazilianDateTime(start: number, end: number) {\n    const jsonStr = `{\"timezone\": \"BRST\", \"end\": ${end}, \"start\": ${start}, \"gmtoffset\": -7200}`;\n\n    // Converte a string JSON em um objeto JavaScript\n    const data = JSON.parse(jsonStr);\n\n    // Converte o timestamp em segundos para uma data JavaScript\n    const startTime = new Date(data.start * 1000);\n    const endTime = new Date(data.end * 1000);\n\n    // Define o fuso horário da B3 como America/Sao_Paulo\n    const b3TimeZone = \"America/Sao_Paulo\";\n\n    // Converte a hora de início e fechamento para o fuso horário da B3\n    const b3StartTime = startTime.toLocaleString(\"pt-BR\", {\n      timeZone: b3TimeZone,\n    });\n    const b3EndTime = endTime.toLocaleString(\"pt-BR\", { timeZone: b3TimeZone });\n\n    // Imprime a hora de início e fechamento da B3 no formato dd/mm/yyyy hh:mm:ss\n    const b3DateFormat = { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" };\n    const b3TimeFormat = {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    };\n    const b3StartTimeStr = new Date(b3StartTime).toLocaleString(\"pt-BR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n    const b3EndTimeStr = new Date(b3EndTime).toLocaleString(\"pt-BR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n\n    console.log(`Horário de abertura da B3: ${b3StartTimeStr}`);\n    console.log(`Horário de fechamento da B3: ${b3EndTimeStr}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}