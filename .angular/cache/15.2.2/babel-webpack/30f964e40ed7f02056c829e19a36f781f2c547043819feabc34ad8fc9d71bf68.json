{"ast":null,"code":"import { Subject, timeout } from \"rxjs\";\nimport { ChartDto } from \"src/models/chartDto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../proxy/proxy.service\";\nexport class AdapterSetvice {\n  constructor(proxyService) {\n    this.proxyService = proxyService;\n    this.subject = new Subject();\n  }\n  getStockValues(stock, interval, range) {\n    this.proxyService.consultStockVaration(stock, interval, range).subscribe(res => {\n      this.subject.next(res);\n    });\n    return this.converterchartServiceToChartDto();\n  }\n  converterchartServiceToChartDto() {\n    new Promise(resolve => resolve(this.subject.pipe(timeout(1000)).subscribe(sub => this.data = sub.chart))).then(() => console.log(this.data));\n    const chartDto = new ChartDto(this.data.chart.result[0].indicators.quote[0].open, this.data.chart.result[0].timestamp);\n    return chartDto;\n  }\n}\nAdapterSetvice.ɵfac = function AdapterSetvice_Factory(t) {\n  return new (t || AdapterSetvice)(i0.ɵɵinject(i1.ProxyService));\n};\nAdapterSetvice.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdapterSetvice,\n  factory: AdapterSetvice.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,EAAEC,OAAO,QAAQ,MAAM;AACvC,SAASC,QAAQ,QAAQ,qBAAqB;;;AAO9C,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IADhC,YAAO,GAAG,IAAIL,OAAO,EAAO;EACqB;EAC1CM,cAAcA,CAACC,KAAa,EAAEC,QAAkB,EAAEC,KAAY;IACnE,IAAI,CAACJ,YAAY,CACdK,oBAAoB,CAACH,KAAK,EAAEC,QAAQ,EAAEC,KAAK,CAAC,CAC5CE,SAAS,CAAEC,GAAG,IAAI;MACjB,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC;IACxB,CAAC,CAAC;IACJ,OAAO,IAAI,CAACG,+BAA+B,EAAE;EAC/C;EACOA,+BAA+BA;IACpC,IAAIC,OAAO,CAAEC,OAAO,IAClBA,OAAO,CACL,IAAI,CAACJ,OAAO,CACTK,IAAI,CAACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CACnBU,SAAS,CAAEQ,GAAG,IAAM,IAAI,CAACC,IAAI,GAAGD,GAAG,CAACE,KAAM,CAAC,CAC/C,CACF,CAACC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,IAAI,CAAC,CAAC;IAEpC,MAAMK,QAAQ,GAAG,IAAIvB,QAAQ,CAC3B,IAAI,CAACkB,IAAI,CAACC,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAClD,IAAI,CAACT,IAAI,CAACC,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACI,SAAS,CACpC;IACD,OAAOL,QAAQ;EACjB;;AA1BWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA4B,SAAd5B,cAAc;EAAA6B,YAFb;AAAM","names":["Subject","timeout","ChartDto","AdapterSetvice","constructor","proxyService","getStockValues","stock","interval","range","consultStockVaration","subscribe","res","subject","next","converterchartServiceToChartDto","Promise","resolve","pipe","sub","data","chart","then","console","log","chartDto","result","indicators","quote","open","timestamp","factory","providedIn"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/acl/adapter/adapter.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Subject, timeout } from \"rxjs\";\nimport { ChartDto } from \"src/models/chartDto\";\nimport { Interval } from \"src/models/interval.enum\";\nimport { Range } from \"src/models/range.enum\";\nimport { ProxyService } from \"../proxy/proxy.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdapterSetvice {\n  private data: any;\n  subject = new Subject<any>();\n  constructor(private proxyService: ProxyService) {}\n  public getStockValues(stock: string, interval: Interval, range: Range) {\n    this.proxyService\n      .consultStockVaration(stock, interval, range)\n      .subscribe((res) => {\n        this.subject.next(res);\n      });\n    return this.converterchartServiceToChartDto();\n  }\n  public converterchartServiceToChartDto(): ChartDto {\n    new Promise((resolve) =>\n      resolve(\n        this.subject\n          .pipe(timeout(1000))\n          .subscribe((sub) => (this.data = sub.chart))\n      )\n    ).then(() => console.log(this.data));\n\n    const chartDto = new ChartDto(\n      this.data.chart.result[0].indicators.quote[0].open,\n      this.data.chart.result[0].timestamp\n    );\n    return chartDto;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}