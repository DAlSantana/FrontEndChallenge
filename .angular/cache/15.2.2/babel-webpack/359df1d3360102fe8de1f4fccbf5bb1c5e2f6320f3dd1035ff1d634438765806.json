{"ast":null,"code":"import { BaseChartDirective } from \"ng2-charts\";\nimport { Chart } from \"chart.js\";\nimport { CandlestickController, CandlestickElement, OhlcController, OhlcElement } from \"chartjs-chart-financial\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport class QuoteChartComponent {\n  constructor() {\n    this.barCount = 60;\n    this.initialDateStr = \"2017-04-01T00:00:00\";\n    this.financialChartData = {\n      datasets: [{\n        label: \"CHRT - Chart.js Corporation\",\n        data: []\n      }]\n    };\n    this.financialChartOptions = {\n      responsive: true,\n      animation: false,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          time: {\n            unit: \"day\"\n          },\n          ticks: {\n            source: \"auto\"\n          }\n        }\n      },\n      borderColor: \"black\",\n      backgroundColor: \"rgba(255,0,0,0,0.3)\",\n      plugins: {\n        legend: {\n          display: true\n        }\n      }\n    };\n    this.financialChartType = \"candlestick\";\n    Chart.register(CandlestickController, OhlcController, CandlestickElement, OhlcElement);\n  }\n  randomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n  randomBar(date, lastClose) {\n    const open = this.randomNumber(lastClose * 0.95, lastClose * 1.05);\n    const close = this.randomNumber(open * 0.95, open * 1.05);\n    const high = this.randomNumber(Math.max(open, close), Math.max(open, close) * 1.1);\n    const low = this.randomNumber(Math.min(open, close) * 0.9, Math.min(open, close));\n    return {\n      x: +date,\n      o: open,\n      h: high,\n      l: low,\n      c: close\n    };\n  }\n  update() {\n    // candlestick vs ohlc\n    this.financialChartType = this.financialChartType === \"candlestick\" ? \"ohlc\" : \"candlestick\";\n  }\n}\nQuoteChartComponent.ɵfac = function QuoteChartComponent_Factory(t) {\n  return new (t || QuoteChartComponent)();\n};\nQuoteChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuoteChartComponent,\n  selectors: [[\"app-quote-chart\"]],\n  viewQuery: function QuoteChartComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(BaseChartDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n    }\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[\"baseChart\", \"\", 1, \"chart\", 3, \"data\", \"options\", \"type\"]],\n  template: function QuoteChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"quote-chart works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"canvas\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.financialChartData)(\"options\", ctx.financialChartOptions)(\"type\", ctx.financialChartType);\n    }\n  },\n  dependencies: [i1.BaseChartDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,kBAAkB,QAAQ,YAAY;AAC/C,SAASC,KAAK,QAAuC,UAAU;AAE/D,SACEC,qBAAqB,EACrBC,kBAAkB,EAClBC,cAAc,EACdC,WAAW,QACN,yBAAyB;;;AAOhC,OAAM,MAAOC,mBAAmB;EAyC9BC;IAxCA,aAAQ,GAAG,EAAE;IACb,mBAAc,GAAG,qBAAqB;IAE/B,uBAAkB,GAA+B;MACtDC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,6BAA6B;QACpCC,IAAI,EAAE;OACP;KAEJ;IAEM,0BAAqB,GAAkC;MAC5DC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,KAAK;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE;YACJC,IAAI,EAAE;WACP;UAEDC,KAAK,EAAE;YACLC,MAAM,EAAE;;;OAGb;MACDC,WAAW,EAAE,OAAO;MACpBC,eAAe,EAAE,qBAAqB;MACtCC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;;;KAGd;IAEM,uBAAkB,GAAc,aAAa;IAKlDvB,KAAK,CAACwB,QAAQ,CACZvB,qBAAqB,EACrBE,cAAc,EACdD,kBAAkB,EAClBE,WAAW,CACZ;EACH;EAEAqB,YAAYA,CAACC,GAAW,EAAEC,GAAW;IACnC,OAAOC,IAAI,CAACC,MAAM,EAAE,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;EAC1C;EAEAI,SAASA,CACPC,IAAU,EACVC,SAAiB;IAEjB,MAAMC,IAAI,GAAG,IAAI,CAACR,YAAY,CAACO,SAAS,GAAG,IAAI,EAAEA,SAAS,GAAG,IAAI,CAAC;IAClE,MAAME,KAAK,GAAG,IAAI,CAACT,YAAY,CAACQ,IAAI,GAAG,IAAI,EAAEA,IAAI,GAAG,IAAI,CAAC;IACzD,MAAME,IAAI,GAAG,IAAI,CAACV,YAAY,CAC5BG,IAAI,CAACD,GAAG,CAACM,IAAI,EAAEC,KAAK,CAAC,EACrBN,IAAI,CAACD,GAAG,CAACM,IAAI,EAAEC,KAAK,CAAC,GAAG,GAAG,CAC5B;IACD,MAAME,GAAG,GAAG,IAAI,CAACX,YAAY,CAC3BG,IAAI,CAACF,GAAG,CAACO,IAAI,EAAEC,KAAK,CAAC,GAAG,GAAG,EAC3BN,IAAI,CAACF,GAAG,CAACO,IAAI,EAAEC,KAAK,CAAC,CACtB;IACD,OAAO;MACLpB,CAAC,EAAE,CAACiB,IAAI;MACRM,CAAC,EAAEJ,IAAI;MACPK,CAAC,EAAEH,IAAI;MACPI,CAAC,EAAEH,GAAG;MACNI,CAAC,EAAEN;KACJ;EACH;EAEAO,MAAMA;IACJ;IACA,IAAI,CAACC,kBAAkB,GACrB,IAAI,CAACA,kBAAkB,KAAK,aAAa,GAAG,MAAM,GAAG,aAAa;EACtE;;AAjFWrC,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAsC;EAAAC;IAAA;qBAuCnB7C,kBAAkB;;;;;;;;;;;;MCvD/B8C,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI;MACzBA,4BAOS;;;MAJPA,eAA2B;MAA3BA,6CAA2B","names":["BaseChartDirective","Chart","CandlestickController","CandlestickElement","OhlcController","OhlcElement","QuoteChartComponent","constructor","datasets","label","data","responsive","animation","maintainAspectRatio","scales","x","time","unit","ticks","source","borderColor","backgroundColor","plugins","legend","display","register","randomNumber","min","max","Math","random","randomBar","date","lastClose","open","close","high","low","o","h","l","c","update","financialChartType","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/components/quote-chart/quote-chart.component.ts","/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/components/quote-chart/quote-chart.component.html"],"sourcesContent":["import { Component, ViewChild } from \"@angular/core\";\nimport { BaseChartDirective } from \"ng2-charts\";\nimport { Chart, ChartConfiguration, ChartType } from \"chart.js\";\n\nimport {\n  CandlestickController,\n  CandlestickElement,\n  OhlcController,\n  OhlcElement,\n} from \"chartjs-chart-financial\";\n\n@Component({\n  selector: \"app-quote-chart\",\n  templateUrl: \"./quote-chart.component.html\",\n  styleUrls: [\"./quote-chart.component.scss\"],\n})\nexport class QuoteChartComponent {\n  barCount = 60;\n  initialDateStr = \"2017-04-01T00:00:00\";\n\n  public financialChartData: ChartConfiguration[\"data\"] = {\n    datasets: [\n      {\n        label: \"CHRT - Chart.js Corporation\",\n        data: [],\n      },\n    ],\n  };\n\n  public financialChartOptions: ChartConfiguration[\"options\"] = {\n    responsive: true,\n    animation: false,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        time: {\n          unit: \"day\",\n        },\n\n        ticks: {\n          source: \"auto\",\n        },\n      },\n    },\n    borderColor: \"black\",\n    backgroundColor: \"rgba(255,0,0,0,0.3)\",\n    plugins: {\n      legend: {\n        display: true,\n      },\n    },\n  };\n\n  public financialChartType: ChartType = \"candlestick\";\n\n  @ViewChild(BaseChartDirective) chart?: BaseChartDirective;\n\n  constructor() {\n    Chart.register(\n      CandlestickController,\n      OhlcController,\n      CandlestickElement,\n      OhlcElement\n    );\n  }\n\n  randomNumber(min: number, max: number): number {\n    return Math.random() * (max - min) + min;\n  }\n\n  randomBar(\n    date: Date,\n    lastClose: number\n  ): { c: number; x: number; h: number; l: number; o: number } {\n    const open = this.randomNumber(lastClose * 0.95, lastClose * 1.05);\n    const close = this.randomNumber(open * 0.95, open * 1.05);\n    const high = this.randomNumber(\n      Math.max(open, close),\n      Math.max(open, close) * 1.1\n    );\n    const low = this.randomNumber(\n      Math.min(open, close) * 0.9,\n      Math.min(open, close)\n    );\n    return {\n      x: +date,\n      o: open,\n      h: high,\n      l: low,\n      c: close,\n    };\n  }\n\n  update(): void {\n    // candlestick vs ohlc\n    this.financialChartType =\n      this.financialChartType === \"candlestick\" ? \"ohlc\" : \"candlestick\";\n  }\n}\n","<p>quote-chart works!</p>\n<canvas\n  class=\"chart\"\n  baseChart\n  [data]=\"financialChartData\"\n  [options]=\"financialChartOptions\"\n  [type]=\"financialChartType\"\n>\n</canvas>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}