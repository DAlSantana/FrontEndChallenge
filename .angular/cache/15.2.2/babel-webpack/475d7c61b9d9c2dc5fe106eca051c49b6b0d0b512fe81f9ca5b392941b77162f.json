{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../proxy/proxy.service\";\nexport class AdapterSetvice {\n  constructor(proxyService) {\n    this.proxyService = proxyService;\n    this.subject = new Subject();\n    this.subJectDto = new Subject();\n  }\n  getStockValues(stock, interval, range) {\n    this.proxyService.consultStockVaration(stock, interval, range).subscribe(res => {\n      this.subject.next(res);\n    });\n    return this.converterchartServiceToChartDto();\n  }\n  converterchartServiceToChartDto() {\n    this.subject.subscribe(sub => this.subJectDto.next(sub.chart));\n    // const chartDto = new ChartDto(\n    //   this.data.chart.result[0].indicators.quote[0].open,\n    //   this.data.chart.result[0].timestamp\n    // );\n    return this.subJectDto;\n  }\n}\nAdapterSetvice.ɵfac = function AdapterSetvice_Factory(t) {\n  return new (t || AdapterSetvice)(i0.ɵɵinject(i1.ProxyService));\n};\nAdapterSetvice.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdapterSetvice,\n  factory: AdapterSetvice.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAAqBA,OAAO,QAAQ,MAAM;;;AAQ1C,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAFhC,YAAO,GAAG,IAAIH,OAAO,EAAO;IAC5B,eAAU,GAAG,IAAIA,OAAO,EAAY;EACa;EAC1CI,cAAcA,CAACC,KAAa,EAAEC,QAAkB,EAAEC,KAAY;IACnE,IAAI,CAACJ,YAAY,CACdK,oBAAoB,CAACH,KAAK,EAAEC,QAAQ,EAAEC,KAAK,CAAC,CAC5CE,SAAS,CAAEC,GAAG,IAAI;MACjB,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC;IACxB,CAAC,CAAC;IACJ,OAAO,IAAI,CAACG,+BAA+B,EAAE;EAC/C;EACOA,+BAA+BA;IACpC,IAAI,CAACF,OAAO,CAACF,SAAS,CAAEK,GAAG,IAAK,IAAI,CAACC,UAAU,CAACH,IAAI,CAACE,GAAG,CAACE,KAAK,CAAC,CAAC;IAChE;IACA;IACA;IACA;IACA,OAAO,IAAI,CAACD,UAAU;EACxB;;AApBWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["Subject","AdapterSetvice","constructor","proxyService","getStockValues","stock","interval","range","consultStockVaration","subscribe","res","subject","next","converterchartServiceToChartDto","sub","subJectDto","chart","factory","providedIn"],"sourceRoot":"","sources":["/Users/diegosantana/Documents/FrontEnd/FrontEndChallenge/src/acl/adapter/adapter.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\nimport { ChartDto } from \"src/models/chartDto\";\nimport { Interval } from \"src/models/interval.enum\";\nimport { Range } from \"src/models/range.enum\";\nimport { ProxyService } from \"../proxy/proxy.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdapterSetvice {\n  private data: any;\n  subject = new Subject<any>();\n  subJectDto = new Subject<ChartDto>();\n  constructor(private proxyService: ProxyService) {}\n  public getStockValues(stock: string, interval: Interval, range: Range) {\n    this.proxyService\n      .consultStockVaration(stock, interval, range)\n      .subscribe((res) => {\n        this.subject.next(res);\n      });\n    return this.converterchartServiceToChartDto();\n  }\n  public converterchartServiceToChartDto(): Observable<ChartDto> {\n    this.subject.subscribe((sub) => this.subJectDto.next(sub.chart));\n    // const chartDto = new ChartDto(\n    //   this.data.chart.result[0].indicators.quote[0].open,\n    //   this.data.chart.result[0].timestamp\n    // );\n    return this.subJectDto;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}